{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\react\\\\project-5\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  let [data, setData] = useState('');\n  useEffect(() => {\n    async function fechdata() {\n      try {\n        let response = await fetch(`https://todearhemant.pythonanywhere.com/patient/api/patients/`);\n        let jsondata = await response.json();\n        setData(jsondata);\n        console.log(jsondata);\n      } catch (error) {\n        console.log(\"data is fallid\", error);\n      }\n    }\n    fechdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: patient.id\n    }, patient.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zP+gM9ZQWNiQQMpducgiYYvbang=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","fechdata","response","fetch","jsondata","json","console","log","error","children","map","patient","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/react/project-5/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n\r\nexport default function App() {\r\n    let [data,setData] =useState('');\r\n\r\n  \r\n\r\n       useEffect(()=>{\r\n\r\n          async function fechdata(){\r\n              \r\n              try{\r\n\r\n                \r\n               let response =await fetch(`https://todearhemant.pythonanywhere.com/patient/api/patients/`);\r\n                \r\n                let jsondata =  await response.json();\r\n\r\n                setData(jsondata)\r\n                \r\n                console.log(jsondata)\r\n            }\r\n            catch (error){\r\n\r\n                console.log(\"data is fallid\",error);\r\n\r\n\r\n            }\r\n            }\r\n            fechdata()\r\n           \r\n        },[])\r\n        \r\n    \r\n\r\nreturn (\r\n    <div>\r\n\r\n        {data.map((patient)=>(\r\n\r\n        <div key={patient.id}>\r\n            \r\n            {patient.id}\r\n            \r\n            \r\n            </div>\r\n\r\n\r\n        ))}\r\n</div>\r\n        \r\n\r\n\r\n\r\n  )\r\n\r\n    }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,IAAI,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEN,QAAQ,CAAC,EAAE,CAAC;EAI7BD,SAAS,CAAC,MAAI;IAEX,eAAeQ,QAAQA,CAAA,EAAE;MAErB,IAAG;QAGF,IAAIC,QAAQ,GAAE,MAAMC,KAAK,CAAE,+DAA8D,CAAC;QAEzF,IAAIC,QAAQ,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAErCL,OAAO,CAACI,QAAQ,CAAC;QAEjBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACzB,CAAC,CACD,OAAOI,KAAK,EAAC;QAETF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACC,KAAK,CAAC;MAGvC;IACA;IACAP,QAAQ,CAAC,CAAC;EAEd,CAAC,EAAC,EAAE,CAAC;EAIb,oBACIL,OAAA;IAAAa,QAAA,EAEKV,IAAI,CAACW,GAAG,CAAEC,OAAO,iBAElBf,OAAA;MAAAa,QAAA,EAEKE,OAAO,CAACC;IAAE,GAFLD,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CAGR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAOF;AAAClB,EAAA,CAtDmBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}